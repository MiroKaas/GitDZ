>>>  from pyspark.sql import functions as F
  File "<stdin>", line 1
    from pyspark.sql import functions as F
    ^
IndentationError: unexpected indent
>>> from pyspark.sql import functions as F
>>> raw_rate = spark \
...     .readStream \
...     .format("rate") \
...     .load()
>>> raw_rate.printSchema()
root
 |-- timestamp: timestamp (nullable = true)
 |-- value: long (nullable = true)

>>> raw_rate.isStreaming
True
>>> print(raw_rate)
DataFrame[timestamp: timestamp, value: bigint]
>>> stream = raw_rate \
... .writeStream \
... .trigger(processingTime='30 seconds') \
... .format("console") \
...     .options(truncate=False) \
...     .start()
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+---------+-----+
|timestamp|value|
+---------+-----+
+---------+-----+

-------------------------------------------                                     
Batch: 1
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 14:57:20.973|0    |
|2022-08-15 14:57:21.973|1    |
|2022-08-15 14:57:22.973|2    |
|2022-08-15 14:57:23.973|3    |
|2022-08-15 14:57:24.973|4    |
|2022-08-15 14:57:25.973|5    |
|2022-08-15 14:57:26.973|6    |
|2022-08-15 14:57:27.973|7    |
|2022-08-15 14:57:28.973|8    |
+-----------------------+-----+

-------------------------------------------
Batch: 2
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 14:57:29.973|9    |
|2022-08-15 14:57:30.973|10   |
|2022-08-15 14:57:31.973|11   |
|2022-08-15 14:57:32.973|12   |
|2022-08-15 14:57:33.973|13   |
|2022-08-15 14:57:34.973|14   |
|2022-08-15 14:57:35.973|15   |
|2022-08-15 14:57:36.973|16   |
|2022-08-15 14:57:37.973|17   |
|2022-08-15 14:57:38.973|18   |
|2022-08-15 14:57:39.973|19   |
|2022-08-15 14:57:40.973|20   |
|2022-08-15 14:57:41.973|21   |
|2022-08-15 14:57:42.973|22   |
|2022-08-15 14:57:43.973|23   |
|2022-08-15 14:57:44.973|24   |
|2022-08-15 14:57:45.973|25   |
|2022-08-15 14:57:46.973|26   |
|2022-08-15 14:57:47.973|27   |
|2022-08-15 14:57:48.973|28   |
+-----------------------+-----+
only showing top 20 rows

-------------------------------------------
Batch: 3
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 14:57:59.973|39   |
|2022-08-15 14:58:00.973|40   |
|2022-08-15 14:58:01.973|41   |
|2022-08-15 14:58:02.973|42   |
|2022-08-15 14:58:03.973|43   |
|2022-08-15 14:58:04.973|44   |
|2022-08-15 14:58:05.973|45   |
|2022-08-15 14:58:06.973|46   |
|2022-08-15 14:58:07.973|47   |
|2022-08-15 14:58:08.973|48   |
|2022-08-15 14:58:09.973|49   |
|2022-08-15 14:58:10.973|50   |
|2022-08-15 14:58:11.973|51   |
|2022-08-15 14:58:12.973|52   |
|2022-08-15 14:58:13.973|53   |
|2022-08-15 14:58:14.973|54   |
|2022-08-15 14:58:15.973|55   |
|2022-08-15 14:58:16.973|56   |
|2022-08-15 14:58:17.973|57   |
|2022-08-15 14:58:18.973|58   |
+-----------------------+-----+
only showing top 20 rows

-------------------------------------------
Batch: 4
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 14:58:29.973|69   |
|2022-08-15 14:58:30.973|70   |
|2022-08-15 14:58:31.973|71   |
|2022-08-15 14:58:32.973|72   |
|2022-08-15 14:58:33.973|73   |
|2022-08-15 14:58:34.973|74   |
|2022-08-15 14:58:35.973|75   |
|2022-08-15 14:58:36.973|76   |
|2022-08-15 14:58:37.973|77   |
|2022-08-15 14:58:38.973|78   |
|2022-08-15 14:58:39.973|79   |
|2022-08-15 14:58:40.973|80   |
|2022-08-15 14:58:41.973|81   |
|2022-08-15 14:58:42.973|82   |
|2022-08-15 14:58:43.973|83   |
|2022-08-15 14:58:44.973|84   |
|2022-08-15 14:58:45.973|85   |
|2022-08-15 14:58:46.973|86   |
|2022-08-15 14:58:47.973|87   |
|2022-08-15 14:58:48.973|88   |
+-----------------------+-----+
only showing top 20 rows


Traceback (most recent call last):
  File "/usr/hdp/current/spark2-client/python/pyspark/context.py", line 261, in signal_handler
    raise KeyboardInterrupt()
KeyboardInterrupt
>>> stream.stop()
>>> stream.explain()
== Physical Plan ==
WriteToDataSourceV2 org.apache.spark.sql.execution.streaming.sources.MicroBatchWriter@751a4680
+- Scan ExistingRDD[timestamp#76,value#77L]
>>> stream.lastProgress
{u'stateOperators': [], u'name': None, u'timestamp': u'2022-08-15T14:59:00.000Z', u'processedRowsPerSecond': 46.875, u'inputRowsPerSecond': 1.0, u'numInputRows': 30, u'batchId': 4, u'sources': [{u'description': u'RateSource[rowsPerSecond=1, rampUpTimeSeconds=0, numPartitions=2]', u'endOffset': 99, u'processedRowsPerSecond': 46.875, u'inputRowsPerSecond': 1.0, u'numInputRows': 30, u'startOffset': 69}], u'durationMs': {u'queryPlanning': 10, u'getOffset': 0, u'addBatch': 148, u'getBatch': 19, u'walCommit': 460, u'triggerExecution': 640}, u'runId': u'e45ff2b7-31b6-4ff0-aede-161b8795615b', u'id': u'b269a243-6a6f-435a-9747-3d2c7dab15c2', u'sink': {u'description': u'org.apache.spark.sql.execution.streaming.ConsoleSinkProvider@90057e'}}
>>> stream.status
{u'message': u'Stopped', u'isTriggerActive': False, u'isDataAvailable': False}
>>> def console_output(df, freq):
...     return df.writeStream \
...         .format("console") \
...         .trigger(processingTime='%s seconds' % freq ) \
...         .options(truncate=False) \
...         .start()
... 
>>> filtered_rate = raw_rate \
... 
Traceback (most recent call last):
  File "/usr/hdp/current/spark2-client/python/pyspark/context.py", line 261, in signal_handler
    raise KeyboardInterrupt()
KeyboardInterrupt
>>> raw_rate = spark \ ## обратились к сессии
  File "<stdin>", line 1
    raw_rate = spark \ ## обратились к сессии
                                                             ^
SyntaxError: unexpected character after line continuation character
>>>     .readStream \ ## чтение потока
  File "<stdin>", line 1
    .readStream \ ## чтение потока
    ^
IndentationError: unexpected indent
>>>     .format("rate") \ ## формат 
  File "<stdin>", line 1
    .format("rate") \ ## формат 
    ^
IndentationError: unexpected indent
>>>     .load() ## загрузка потокаraw_rate = spark \
Traceback (most recent call last):
  File "/usr/hdp/current/spark2-client/python/pyspark/context.py", line 261, in signal_handler
    raise KeyboardInterrupt()
KeyboardInterrupt
>>> raw_rate = spark \
... .readStream \
... .format("rate") \ 
  File "<stdin>", line 3
    .format("rate") \ 
                     ^
SyntaxError: unexpected character after line continuation character
>>> raw_rate = spark \
... .readStream \
... .format("rate") \
... .load()
>>> stream = console_output(raw_rate,10)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+---------+-----+
|timestamp|value|
+---------+-----+
+---------+-----+

-------------------------------------------
Batch: 1
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 15:10:27.162|0    |
|2022-08-15 15:10:28.162|1    |
+-----------------------+-----+

-------------------------------------------
Batch: 2
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 15:10:29.162|2    |
|2022-08-15 15:10:30.162|3    |
|2022-08-15 15:10:31.162|4    |
|2022-08-15 15:10:32.162|5    |
|2022-08-15 15:10:33.162|6    |
|2022-08-15 15:10:34.162|7    |
|2022-08-15 15:10:35.162|8    |
|2022-08-15 15:10:36.162|9    |
|2022-08-15 15:10:37.162|10   |
|2022-08-15 15:10:38.162|11   |
+-----------------------+-----+

-------------------------------------------
Batch: 3
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 15:10:39.162|12   |
|2022-08-15 15:10:40.162|13   |
|2022-08-15 15:10:41.162|14   |
|2022-08-15 15:10:42.162|15   |
|2022-08-15 15:10:43.162|16   |
|2022-08-15 15:10:44.162|17   |
|2022-08-15 15:10:45.162|18   |
|2022-08-15 15:10:46.162|19   |
|2022-08-15 15:10:47.162|20   |
|2022-08-15 15:10:48.162|21   |
+-----------------------+-----+


Traceback (most recent call last):
  File "/usr/hdp/current/spark2-client/python/pyspark/context.py", line 261, in signal_handler
    raise KeyboardInterrupt()
KeyboardInterrupt
>>> stream-------------------------------------------
Batch: 4
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 15:10:49.162|22   |
|2022-08-15 15:10:50.162|23   |
|2022-08-15 15:10:51.162|24   |
|2022-08-15 15:10:52.162|25   |
|2022-08-15 15:10:53.162|26   |
|2022-08-15 15:10:54.162|27   |
|2022-08-15 15:10:55.162|28   |
|2022-08-15 15:10:56.162|29   |
|2022-08-15 15:10:57.162|30   |
|2022-08-15 15:10:58.162|31   |
+-----------------------+-----+

.stop()
>>> stream.stop()
>>> filtered_rate = raw_rate \
...     .filter(F.col("value") % F.lit("2") == 0)
>>> out = console_output(filtered_rate, 10)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+---------+-----+
|timestamp|value|
+---------+-----+
+---------+-----+

-------------------------------------------
Batch: 1
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 15:12:43.293|0    |
|2022-08-15 15:12:45.293|2    |
|2022-08-15 15:12:47.293|4    |
+-----------------------+-----+

-------------------------------------------
Batch: 2
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 15:12:49.293|6    |
|2022-08-15 15:12:51.293|8    |
|2022-08-15 15:12:53.293|10   |
|2022-08-15 15:12:55.293|12   |
|2022-08-15 15:12:57.293|14   |
+-----------------------+-----+


Traceback (most recent call last):
  File "/usr/hdp/current/spark2-client/python/pyspark/context.py", line 261, in signal_handler
    raise KeyboardInterrupt()
KeyboardInterrupt
>>> o-------------------------------------------
Batch: 3
-------------------------------------------
+-----------------------+-----+
|timestamp              |value|
+-----------------------+-----+
|2022-08-15 15:12:59.293|16   |
|2022-08-15 15:13:01.293|18   |
|2022-08-15 15:13:03.293|20   |
|2022-08-15 15:13:05.293|22   |
|2022-08-15 15:13:07.293|24   |
+-----------------------+-----+

out.stop()
>>> extra_rate = filtered_rate \
...     .withColumn("my_value",
...                 F.when((F.col("value") % F.lit(10) == 0), F.lit("jubilee"))
...                     .otherwise(F.lit("not yet")))
>>> out = console_output(extra_rate, 5)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+---------+-----+--------+
|timestamp|value|my_value|
+---------+-----+--------+
+---------+-----+--------+

-------------------------------------------
Batch: 1
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:18:34.111|0    |jubilee |
|2022-08-15 15:18:36.111|2    |not yet |
|2022-08-15 15:18:38.111|4    |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 2
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:18:40.111|6    |not yet |
|2022-08-15 15:18:42.111|8    |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 3
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:18:44.111|10   |jubilee |
|2022-08-15 15:18:46.111|12   |not yet |
|2022-08-15 15:18:48.111|14   |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 4
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:18:50.111|16   |not yet |
|2022-08-15 15:18:52.111|18   |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 5
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:18:54.111|20   |jubilee |
|2022-08-15 15:18:56.111|22   |not yet |
|2022-08-15 15:18:58.111|24   |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 6
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:19:00.111|26   |not yet |
|2022-08-15 15:19:02.111|28   |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 7
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:19:04.111|30   |jubilee |
|2022-08-15 15:19:06.111|32   |not yet |
|2022-08-15 15:19:08.111|34   |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 8
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:19:10.111|36   |not yet |
|2022-08-15 15:19:12.111|38   |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 9
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:19:14.111|40   |jubilee |
|2022-08-15 15:19:16.111|42   |not yet |
|2022-08-15 15:19:18.111|44   |not yet |
+-----------------------+-----+--------+

-------------------------------------------
Batch: 10
-------------------------------------------
+-----------------------+-----+--------+
|timestamp              |value|my_value|
+-----------------------+-----+--------+
|2022-08-15 15:19:20.111|46   |not yet |
|2022-08-15 15:19:22.111|48   |not yet |
+-----------------------+-----+--------+

out.stop()
>>> killAll()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'killAll' is not defined
>>> cd for_stream/
  File "<stdin>", line 1
    cd for_stream/
                ^
SyntaxError: invalid syntax
>>> logout
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'logout' is not defined
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>>
